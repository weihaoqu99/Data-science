
import pandas as pd
import torch
import bert_score
from pathlib import Path

# Local model and baseline path
MODEL_PATH = r"C:/Users/ZKC7HOU/Documents/4. BERT score/roberta-large"
BASELINE_PATH = r"C:/Users/ZKC7HOU/Documents/4. BERT score/roberta-large/roberta-large.tsv"
DEVICE = "cuda" if torch.cuda.is_available() else "cpu"

def run_bertscore_on_excel(input_path: str, output_path: str):
    df = pd.read_excel(input_path)

    for col in ("reference", "candidate"):
        if col not in df.columns:
            raise ValueError(f"Excel must contain columns: reference and candidate")

    references = df["reference"].astype(str).str.strip().tolist()
    candidates = df["candidate"].astype(str).str.strip().tolist()

    # Compute BERTScore directly using bert_score library
    P, R, F1 = bert_score.score(
        cands=candidates,
        refs=references,
        lang="en",
        model_type=MODEL_PATH,
        num_layers=17,
        device=DEVICE,
        batch_size=32,
        rescale_with_baseline=True,
        baseline_path=BASELINE_PATH,
        verbose=True,
    )

    df["precision"] = [round(p.item(), 6) for p in P]
    df["recall"] = [round(r.item(), 6) for r in R]
    df["f1"] = [round(f.item(), 6) for f in F1]

    df.to_excel(output_path, index=False)
    print(f"âœ… Results saved to: {output_path}")

# Example usage
if __name__ == "__main__":
    input_file = r"C:/Users/ZKC7HOU/Documents/4. BERT score/input_data.xlsx"
    output_file = r"C:/Users/ZKC7HOU/Documents/4. BERT score/output_data.xlsx"
    run_bertscore_on_excel(input_file, output_file)